# REINVENT4 TOML input example for sampling
#


run_type = "sampling"
device = "mps"  # set torch device e.g. "cpu"
json_out_config = "vegfr_sampling.json"  # write this TOML to JSON


[parameters]

# Uncomment one of the comment blocks below.  Each generator needs a model
# file and possibly a SMILES file with seed structures.

# Reinvent: de novo sampling
model_file = "TL_vegfr_reinvent_100.model"

## LibInvent: find R-groups for the given scaffolds
#model_file = "priors/libinvent.prior"
#smiles_file = "scaffolds.smi"  # 1 scaffold per line with attachment points

## LinkInvent: find a linker/scaffold to link two fragments
# model_file = "../../priors/linkinvent.prior"
# smiles_file = "warheads.smi"  # 2 warheads per line separated with '|'

## Mol2Mol: find molecules similar to the provided molecules
# model_file = "TL_Mol2Mol.model"
# smiles_file = "mol2mol.smi"  # 1 compound per line
# sample_strategy = "multinomial"  # multinomial or beamsearch (deterministic)
# temperature = 0.8 # temperature in multinomial sampling
# # tb_logdir = "tb_logs"  # name of the TensorBoard logging directory

## Pepinvent
#model_file = "priors/pepinvent.prior"
#smiles_file = "pepinvent.smi"
# sample_strategy = "multinomial"  # multinomial or beamsearch (deterministic)
# temperature = 1.0 # temperature in multinomial sampling
# tb_logdir = "bcl_sample"  # name of the TensorBoard logging directory

output_file = 'sampling_vegfr.csv'  # sampled SMILES and NLL in CSV format

num_smiles = 5000  # number of SMILES to be sampled, 1 per input SMILES
unique_molecules = true  # if true remove all duplicatesd canonicalize smiles
randomize_smiles = true # if true shuffle atoms in SMILES randomly
